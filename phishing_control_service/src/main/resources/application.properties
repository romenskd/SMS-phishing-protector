spring.application.name=phishing_control_service

#########################
# kafka
#########################
# General
# spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.properties.security.protocol=PLAINTEXT

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable.idempotence=true
spring.kafka.producer.linger.ms=20
spring.kafka.producer.batch.size=16384
spring.kafka.producer.buffer.memory=33554432
spring.kafka.producer.compression.type=snappy

# Consumer
spring.kafka.consumer.group-id=sms-service-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.fetch.max.wait.ms=500
spring.kafka.consumer.max.poll.records=50
spring.kafka.consumer.isolation.level=read_committed

# Topics
spring.kafka.topics.url-verification=sms-url-verification
spring.kafka.topics.verified-url=sms-verified-url
spring.kafka.topic-config.url-verification.partitions=5
spring.kafka.topic-config.url-verification.replication-factor=1


#########################
# Liquibase
#########################
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.default-schema=public
spring.docker.compose.enabled=false

#########################
# postgre
#########################
# spring.datasource.url=jdbc:postgresql://localhost:5432/tracked_urls
spring.datasource.url=jdbc:postgresql://processed_urls_db:5432/tracked_urls
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
url-verification.batch-size=50

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.initialization-fail-timeout=30000

#####################
#  google web risk
#####################
google.cloud.api-key=api
webrisk.api.token=access-token

########################
# redis
########################
# spring.data.redis.host=localhost
spring.data.redis.host=redis
spring.data.redis.port=6379
